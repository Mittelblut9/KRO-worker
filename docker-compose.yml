volumes:
  postgres_data:

services:
  postgres:
    image: postgres:latest
    user: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 20s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    volumes:
      - ./:/usr/src/app
    working_dir: /usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

  app:
    image: node:20.9
    working_dir: /app
    volumes:
      - ./KRO-website:/app
    command: >
      sh -c "npm install && npm run build && node .output/server/index.mjs"
    ports:
      - 3000:3000
    env_file:
      - .env.app